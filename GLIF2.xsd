<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	
	<xs:include schemaLocation="transformation.xsd"/>
	<xs:include schemaLocation="color.xsd"/>
	<xs:include schemaLocation="link.xsd"/>
	<xs:include schemaLocation="linkref.xsd"/>
	<xs:include schemaLocation="point.xsd"/>
	<xs:include schemaLocation="guideline.xsd"/>
	<xs:include schemaLocation="image.xsd"/>
	<xs:include schemaLocation="outline.xsd"/>
	<xs:include schemaLocation="lib.xsd"/>
	<xs:include schemaLocation="unicode.xsd"/>
	<xs:include schemaLocation="advance.xsd"/>
	
	<!-- REDEFINITIONS ABOVE GLIF VERSION 1 ELEMENTS -->
	
	<xs:redefine schemaLocation="component.xsd">
		<xs:complexType name="component">
			<xs:complexContent>
				<xs:extension base="component">
					<xs:attribute name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation xml:lang="en">Arbitrary name or label for this component. The name does not have to be unique within an outline.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:redefine>
	
	<xs:redefine schemaLocation="contour.xsd">
		<xs:complexType name="contour">
			<xs:complexContent>
				<xs:extension base="contour">
					<xs:attribute name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation xml:lang="en">Arbitrary name or label for this component. The name does not have to be unique within an outline.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:redefine>
	
	<!-- ROOT GLYPH ELEMENT -->
	
	<xs:element name="glyph">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation xml:lang="en">The Glyph Interchange Format (GLIF) is a simple and clear XML representation of a single glyph. GLIF files typically have a .glif extension. A GLIF may represent either an outline glyph or an image glyph. If a GLIF contains an outline element within the top level glyph element, the glyph is an outline glyph. If a GLIF contains one or more image elements within the top level glyph element, the glyph is an image glyph. Within a layer, if no GLIF files contain either an outline or an image element within the top level glyph elements, the layer is an outline layer. Outline glyphs must not contain images. Image glyphs must not contain outlines.</xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element name="advance" type="advance" minOccurs="0"/>
				<xs:element name="unicode" type="unicode" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="guideline" type="guideline" minOccurs="0" maxOccurs="unbounded"/>
				<xs:choice minOccurs="0">
					<xs:element name="outline" type="outline"/>
					<xs:element name="image" type="image" maxOccurs="unbounded"/>
				</xs:choice>
				<xs:element name="lib" type="lib" minOccurs="0"/>	
			</xs:sequence>
			<xs:attribute name="name" type="xs:token">
				<xs:annotation>
					<xs:documentation xml:lang="en">The name of the glyph. The name attribute has limited uses in this version. The contents.plist file maps glyph names to file names, and one of the reasons to do this is to avoid having to parse all files just to get at a list of available glyph names. When reading GLIF files, the name attribute is probably best ignored, since manual editing may have caused a mismatch with the glyph name as stored in contents.plist, as well as with the file name, which is an algorithmic transformation of the glyph name. This attribute may become more useful in future versions of GLIF.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="format" type="xs:decimal">
				<xs:annotation>
					<xs:documentation xml:lang="en">The format version.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	
</xs:schema>
